@page
@using Microsoft.AspNetCore.Identity
@using NET_Projekt.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model NET_Projekt.Pages.Recipes.DetailsModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Recipe</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.IngredientsList)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.IngredientsList)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.PublicationDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.PublicationDate)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.ApplicationUser.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Recipe.ApplicationUser.UserName)
        </dd>
        <dt class="col-sm-2">
            Ocena:
        </dt>
        <dd class="col-sm-10">
            <a style="color:forestgreen">Plusy:</a> @Html.DisplayFor(model => model.Raiting) | <a style="color:red">Minusy:</a> @(Model.Raitings.Count - Model.Raiting)
        </dd>
        <dt class="col-sm-2">
            Oceń:
        </dt>
        @if (SignInManager.IsSignedIn(User))
        {
            <dd class="col-sm-10">
                @*<a asp-page="../Raitings/Create" asp-route-recipeId="@Model.Recipe.Id" asp-route-applicationUserId="@Model.Recipe.ApplicationUserID" asp-route-isPositive="1" style="color:forestgreen">+</a>
                    | <a asp-page="../Raitings/Create" asp-route-id="@Model.Recipe.Id" asp-route-applicationUserId="@Model.Recipe.ApplicationUserID" asp-route-isPositive="0" style="color:red">-</a>*@
                <form method="post">
                    <div class="form-check form-check-inline">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="radio" asp-for="@Model.IsPositive" class="form-check-input" value="true" id="radio1" checked/>
                            <label asp-for="@Model.NewRaiting.IsPositive" class="form-check-label mr-2" for="radio1"><a style="color:forestgreen">+</a></label>
                            <input type="radio" asp-for="@Model.IsPositive" class="form-check-input" value="false" id="radio2" />
                            <label asp-for="@Model.NewRaiting.IsPositive" class="form-check-label mr-2" for="radio2"><a style="color:red">-</a></label>
                            <span asp-validation-for="NewRaiting.IsPositive" class="text-danger"></span>
                            @*<input type="hidden" asp-for="@Model.Recipe.Id" class="form-control"/>*@
                            <input asp-route-id="@Model.Recipe.Id" type="submit" value="Oceń" class="btn btn-light mr-2" />  
                            @if(!Model.ModelState.IsValid)
                            {
                                <article style="color:red">Zaznacz jedną z opcji przed naciśnięciem przycisku</article>
                            }
                    </div>
                </form>
            </dd>
        }
        else
        {
            <dd class="col-sm-10 text-secondary">Musisz być zalogowany aby oddać głos!</dd> 
        }

    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Recipe.Id">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
